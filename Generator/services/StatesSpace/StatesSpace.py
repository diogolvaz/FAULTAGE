#
#   This file represents the Actions' space
#

##################################################################################################################################
#
#   IMPORTS
#
##################################################################################################################################

# default
from services.StatesSpace.RBState import RBSTATE

##################################################################################################################################
#
#   CLASS
#
##################################################################################################################################


class StatesSpace:

    ##################################################################################################################################
    #
    #   VARIABLES
    #
    ##################################################################################################################################

    ##################################################################################################################################
    #
    #   CONSTRUCTOR
    #
    ##################################################################################################################################

    def __init__(self):
        self._states = []

    ##################################################################################################################################
    #
    #   GET
    #
    ##################################################################################################################################

    def getStates(self):
        return self._states

    # ----------------------------------------------------------------

    def getSize(self):
        return len(self._states)

    # ----------------------------------------------------------------

    def getStateIndex(self, o_state):
        for i in range(0, len(self._states)):
            if(o_state == self._states[i]):
                return i

    # ----------------------------------------------------------------

    def getStateID(self, o_state):
        for i in range(0, len(self._states)):
            if(o_state == self._states[i]):
                return self._states[i].getID()

    # ----------------------------------------------------------------

    def stateExists(self, o_state):
        return o_state in self._states

    # ----------------------------------------------------------------

    def addState(self, o_state):
        o_state.setID(len(self._states))
        self._states += [o_state]
